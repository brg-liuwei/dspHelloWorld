// Code generated by protoc-gen-go.
// source: response.proto
// DO NOT EDIT!

/*
Package response is a generated protocol buffer package.

It is generated from these files:
	response.proto

It has these top-level messages:
	MgxBidResponse
*/
package megaMedia

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type MgxBidResponse struct {
	// BidResponse结构版本，当前为1
	Version *int32 `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	// 广告请求的唯一ID
	BidGuid          *string                      `protobuf:"bytes,2,req,name=bid_guid" json:"bid_guid,omitempty"`
	Adslot           []*MgxBidResponse_AdSlot     `protobuf:"bytes,3,rep,name=adslot" json:"adslot,omitempty"`
	AdslotUnion      *MgxBidResponse_AdSlot_Union `protobuf:"bytes,4,opt,name=adslot_union" json:"adslot_union,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *MgxBidResponse) Reset()         { *m = MgxBidResponse{} }
func (m *MgxBidResponse) String() string { return proto.CompactTextString(m) }
func (*MgxBidResponse) ProtoMessage()    {}

func (m *MgxBidResponse) GetVersion() int32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *MgxBidResponse) GetBidGuid() string {
	if m != nil && m.BidGuid != nil {
		return *m.BidGuid
	}
	return ""
}

func (m *MgxBidResponse) GetAdslot() []*MgxBidResponse_AdSlot {
	if m != nil {
		return m.Adslot
	}
	return nil
}

func (m *MgxBidResponse) GetAdslotUnion() *MgxBidResponse_AdSlot_Union {
	if m != nil {
		return m.AdslotUnion
	}
	return nil
}

// ********广告位购买信息*********
type MgxBidResponse_AdSlot struct {
	// 在页面上广告位的序列id，Video和mobile默认为1
	Id *int32 `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	// 当前广告位在Menlo Ad Exchange中唯一的Id
	MegaxAid *int32 `protobuf:"varint,2,req,name=megax_aid" json:"megax_aid,omitempty"`
	// 买方对该广告位的购买价格(人民币:分/千次展现)
	// 在固定交易时只要购买价格>=协议价格，即以协议价格成交
	MaxCpmMicros *int64 `protobuf:"varint,3,req,name=max_cpm_micros" json:"max_cpm_micros,omitempty"`
	// 参与程序化购买的买方在Menlo Ad Exchange中的唯一ID
	BuyerId *string `protobuf:"bytes,4,req,name=buyer_id" json:"buyer_id,omitempty"`
	// 广告主在买方平台中的唯一id（用于广告主审核）
	AdvertiserId *string `protobuf:"bytes,5,req,name=advertiser_id" json:"advertiser_id,omitempty"`
	// 提供素材的方式
	// 1:图片, 2: flash（无线广告不支持）
	// 3:flv（无线广告不支持）
	// 4:代码（iframe/html代码，视频和无线广告不支持）
	CreativeFormat *int32 `protobuf:"varint,6,req,name=creative_format" json:"creative_format,omitempty"`
	// 素材的文件地址/代码/
	// 若为代码则必须实现点击宏，一共有3种
	// 非编码支持跳转点击宏：%%MGX_CLICK_URL%%
	// 编码点击宏：%%MGX_CLICK_URL_ESC%%
	// 两次编码点击宏：%%MGX_CLICK_URL_ESC_ESC%%
	// 在广告点击时调用该宏来帮Ad Exchange监测点击数据
	CreativeContent *string `protobuf:"bytes,7,req,name=creative_content" json:"creative_content,omitempty"`
	// 素材高度
	CreativeHeight *int32 `protobuf:"varint,8,req,name=creative_height" json:"creative_height,omitempty"`
	// 素材宽度
	CreativeWidth *int32 `protobuf:"varint,9,req,name=creative_width" json:"creative_width,omitempty"`
	// 视频广告播放时长，视频广告展现形式为贴片使用
	Duration *uint32 `protobuf:"varint,15,opt,name=duration" json:"duration,omitempty"`
	// 创意在DSP中的唯一ID，用于数据对比、创意审核以及素材托管
	CreativeId *string `protobuf:"bytes,10,opt,name=creative_id" json:"creative_id,omitempty"`
	// 广告点击目标地址，素材使用代码时不需要
	ClickThroughUrl *string `protobuf:"bytes,11,opt,name=click_through_url" json:"click_through_url,omitempty"`
	// 预留PV监测，素材使用代码时不需要
	ImpressionTracking []string `protobuf:"bytes,12,rep,name=impression_tracking" json:"impression_tracking,omitempty"`
	// 预留点击监测，素材使用代码时不需要
	ClickTracking []string `protobuf:"bytes,13,rep,name=click_tracking" json:"click_tracking,omitempty"`
	// 自定义数据(会返回给bidresult)
	ExtendData       *string `protobuf:"bytes,14,opt,name=extend_data" json:"extend_data,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MgxBidResponse_AdSlot) Reset()         { *m = MgxBidResponse_AdSlot{} }
func (m *MgxBidResponse_AdSlot) String() string { return proto.CompactTextString(m) }
func (*MgxBidResponse_AdSlot) ProtoMessage()    {}

func (m *MgxBidResponse_AdSlot) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *MgxBidResponse_AdSlot) GetMegaxAid() int32 {
	if m != nil && m.MegaxAid != nil {
		return *m.MegaxAid
	}
	return 0
}

func (m *MgxBidResponse_AdSlot) GetMaxCpmMicros() int64 {
	if m != nil && m.MaxCpmMicros != nil {
		return *m.MaxCpmMicros
	}
	return 0
}

func (m *MgxBidResponse_AdSlot) GetBuyerId() string {
	if m != nil && m.BuyerId != nil {
		return *m.BuyerId
	}
	return ""
}

func (m *MgxBidResponse_AdSlot) GetAdvertiserId() string {
	if m != nil && m.AdvertiserId != nil {
		return *m.AdvertiserId
	}
	return ""
}

func (m *MgxBidResponse_AdSlot) GetCreativeFormat() int32 {
	if m != nil && m.CreativeFormat != nil {
		return *m.CreativeFormat
	}
	return 0
}

func (m *MgxBidResponse_AdSlot) GetCreativeContent() string {
	if m != nil && m.CreativeContent != nil {
		return *m.CreativeContent
	}
	return ""
}

func (m *MgxBidResponse_AdSlot) GetCreativeHeight() int32 {
	if m != nil && m.CreativeHeight != nil {
		return *m.CreativeHeight
	}
	return 0
}

func (m *MgxBidResponse_AdSlot) GetCreativeWidth() int32 {
	if m != nil && m.CreativeWidth != nil {
		return *m.CreativeWidth
	}
	return 0
}

func (m *MgxBidResponse_AdSlot) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *MgxBidResponse_AdSlot) GetCreativeId() string {
	if m != nil && m.CreativeId != nil {
		return *m.CreativeId
	}
	return ""
}

func (m *MgxBidResponse_AdSlot) GetClickThroughUrl() string {
	if m != nil && m.ClickThroughUrl != nil {
		return *m.ClickThroughUrl
	}
	return ""
}

func (m *MgxBidResponse_AdSlot) GetImpressionTracking() []string {
	if m != nil {
		return m.ImpressionTracking
	}
	return nil
}

func (m *MgxBidResponse_AdSlot) GetClickTracking() []string {
	if m != nil {
		return m.ClickTracking
	}
	return nil
}

func (m *MgxBidResponse_AdSlot) GetExtendData() string {
	if m != nil && m.ExtendData != nil {
		return *m.ExtendData
	}
	return ""
}

// ********竞价联动广告位信息*********
type MgxBidResponse_AdSlot_Union struct {
	// adslot的序列id组合，用于联动广告的售卖方式
	AdslotIndexIds []int32 `protobuf:"varint,1,rep,name=adslot_index_ids" json:"adslot_index_ids,omitempty"`
	// DSP对该广告位的出价价格(人民币:分/千次展现)
	MaxCpmPrice *int64 `protobuf:"varint,2,req,name=max_cpm_price" json:"max_cpm_price,omitempty"`
	// 参与竞价的DSP(buyer)在MegaMeida中的唯一ID，由MegaMeida固定分配
	BuyerId          *string `protobuf:"bytes,3,req,name=buyer_id" json:"buyer_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MgxBidResponse_AdSlot_Union) Reset()         { *m = MgxBidResponse_AdSlot_Union{} }
func (m *MgxBidResponse_AdSlot_Union) String() string { return proto.CompactTextString(m) }
func (*MgxBidResponse_AdSlot_Union) ProtoMessage()    {}

func (m *MgxBidResponse_AdSlot_Union) GetAdslotIndexIds() []int32 {
	if m != nil {
		return m.AdslotIndexIds
	}
	return nil
}

func (m *MgxBidResponse_AdSlot_Union) GetMaxCpmPrice() int64 {
	if m != nil && m.MaxCpmPrice != nil {
		return *m.MaxCpmPrice
	}
	return 0
}

func (m *MgxBidResponse_AdSlot_Union) GetBuyerId() string {
	if m != nil && m.BuyerId != nil {
		return *m.BuyerId
	}
	return ""
}

func init() {
}
